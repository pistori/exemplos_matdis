# -*- coding: utf-8 -*-
"""Propriedades_Grafos.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GXaEdXaTSmhF8LzLDnGsW_w24o4NObEv

# Mostrando algumas propriedades de um grafo

## Autor: Hemerson Pistori (pistori@ucdb.br)

Neste exemplo eu mostro algumas propriedades de um grafo definido pelo usuário e também como deixar o usuário entrar com os dados para criar o grafo

## Lendo os dados para montar o grafo
"""

# Pergunta para o usuário quais são os vértices do grafo
# Por exemplo: entrando com "abcd" irá criar 4 vértices: 'a','b','c','d'
vertices=list(input("Entre com as sequência de vértices (exemplo: abcd): " ))
print('Muito obrigado, os vértices ficaram assim: ',vertices)

# Para cada vértice, pergunta quais são seus vizinhos
arestas=[]
for vertice in vertices:
    vizinhos=list(input("Quais os vizinhos de "+vertice+" ? "))
    for vizinho in vizinhos:
      aresta=(vertice,vizinho)
      arestas.append(aresta)
print('Muito obrigado, as arestas ficaram assim: ',arestas)

# Apenas junta vertices e arestas em um única estrutura de dados
grafo=(vertices,arestas)
print('Grafo com tudo junto: ',grafo)
print('Vértices do grafo: ',grafo[0])
print('Arestas do grafo: ',grafo[1])

"""# Visualizando o grafo"""

# Importa uma biblioteca que implementa um monte de funcionalidades
# para trabalhar com grafos (aqui neste exemplo vamos usar apenas
# para mostrar o grafo)

import networkx as nx 
import matplotlib.pyplot as plt

# Cria um grafo vazio
G = nx.Graph()

# Coloca os vértices e arestas no grafo G
G.add_nodes_from(grafo[0])
G.add_edges_from(grafo[1])
nx.draw(G, with_labels = True)
plt.show()

"""## Mostrando algumas propriedades do grafo

Criamos aqui uma função para cada propriedade e também mostramos como o usuário pode escolher a propriedade que quer ver através de uma lista de opções
"""

def totalArestas(grafo):
  return(len(grafo[1]))

def grauMaximo(grafo):
  # AINDA NÃO ESTÁ IMPLEMENTADA
  return('FALTA IMPLEMENTAR GRAU')

def completo(grafo):
  # AINDA NÃO ESTÁ IMPLEMENTADA
  return('FALTA IMPLEMENTAR COMPLETO')

print('O total de arestas é ',totalArestas(grafo))
print('O grau máximo do grafo é ',grauMaximo(grafo))
print('O grafo ',completo(grafo), 'é completo')